@hostname = localhost
@port = 3005
@host = {{hostname}}:{{port}}
@contentType = application/json
## valid uuid = 50cf148b-d8c9-48c9-94e3-91551f3ed62b
### 
# @name createCategory
POST  http://{{host}}/categories
Content-Type: application/json

{
    "name": "Category 2",
    "description": "Description 1"
}
###

@categoryId = {{createCategory.response.body.data.id}}
###  List categories
GET http://{{host}}/categories
Content-Type: {{contentType}}

### Get category
GET  http://{{host}}/categories/{{categoryId}}
Content-Type: {{contentType}}

### Update category
PATCH  http://{{host}}/categories/8180d203-77eb-47f9-a3b6-2d9375cc6ed2
Content-Type: {{contentType}}

{
  "name": "Drama",
  "description": "some description"
}

### Delete category
DELETE  http://{{host}}/categories/8180d203-77eb-47f9-a3b6-2d9375cc6ed2


### Create genre
# @name createGenre
POST http://{{host}}/genres
Content-Type: {{contentType}}

{
  "name": "Genre 1",
  "categories_id": [
    "{{categoryId}}"
  ]
}

###
@genreId = {{createGenre.response.body.data.id}}


### Create CastMember
# @name createCastMember
POST http://{{host}}/cast-members
Content-Type: application/json

{
    "name": "Cast Member 1",
    "type": 1
}

###

@castMemberId = {{createCastMember.response.body.data.id}}

###
# @name createVideo
POST http://{{host}}/videos
Content-Type: application/json

{
    "title": "Video 2",
    "description": "Description 1",
    "year_launched": 2020,
    "is_opened": false,
    "rating": "L",
    "duration": 90,
    "categories_id": [
        "{{categoryId}}"
    ],
    "genres_id": [
        "{{genreId}}"
    ],
    "cast_members_id": [
        "{{castMemberId}}"
    ]
}

###

@videoId = {{createVideo.response.body.data.id}}

###
GET http://{{host}}/videos/{{videoId}}

###
# @name updateVideo
PATCH  http://{{host}}/videos/{{videoId}}
Content-Type: application/json

{
    "title": "Video 4",
    "description": "Description 4",
    "year_launched": 2024,
    "is_opened": false,
    "rating": "L",
    "duration": 120,
    "categories_id": [
        "{{categoryId}}"
    ],
    "genres_id": [
        "{{genreId}}"
    ],
    "cast_members_id": [
        "{{castMemberId}}"
    ]
}


###
@videoId = {{createVideo.response.body.data.id}}

###
# @name uploadVideo
PATCH http://{{host}}/videos/{{videoId}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

# ------WebKitFormBoundary1234
# Content-Disposition: form-data; name="video"; filename="video.mp4"
# Content-Type: video/mp4

# < ./package.json
------WebKitFormBoundary1234
Content-Disposition: form-data; name="title"
Content-Type: text/plain

< ./test.txt
------WebKitFormBoundary1234--


###
GET http://{{host}}/rabbitmq-fake

### Estou usando host.docker.internal, porque no momento o dev container com rest client está fazendo requisição de dentro do container, 
### então por localhost:8080 não funciona, mas se estiver usando o rest client fora do container, pode usar localhost:8080
POST http://localhost:8080/realms/codeflix/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=admin@user.com
&password=secret
&grant_type=password
&client_id=codeflix-admin-frontend